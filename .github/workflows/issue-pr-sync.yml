name: Apply Issue Details to Pull Request

on:
  pull_request:
    types: [opened]

jobs:
  apply-details:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract issue number
        id: extract-issue
        run: |
          ISSUE_NUMBER=$(echo "${{ github.event.pull_request.title }} ${{ github.event.pull_request.body }}" | grep -oE '#[0-9]+' | head -n 1 | tr -d '#')
          echo "::set-output name=ISSUE_NUMBER::$ISSUE_NUMBER"

      - name: Check if issue number is found
        if: steps.extract-issue.outputs.ISSUE_NUMBER != ''
        run: |
          echo "Found issue number: ${{ steps.extract-issue.outputs.ISSUE_NUMBER }}"

      - name: Get issue details
        id: get-issue-details
        if: steps.extract-issue.outputs.ISSUE_NUMBER != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_SECRET }}
          script: |
            const core = require('@actions/core');
            const issueNumber = parseInt("${{ steps.extract-issue.outputs.ISSUE_NUMBER }}", 10);
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });

            const labels = issue.data.labels ? issue.data.labels.map(label => label.name) : [];
            const assignees = issue.data.assignees ? issue.data.assignees.map(assignee => assignee.login) : [];
            const milestone = issue.data.milestone ? issue.data.milestone.number : null;
            
            // Fetch project cards using issue events
            const projectCards = await github.rest.issues.listEventsForTimeline({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });

            const projects = projectCards.data
              .filter(event => event.event === 'added_to_project')
              .map(event => event.project_card.project_id);

            const result = JSON.stringify({
              labels: labels,
              assignees: assignees,
              projects: projects,
              milestone: milestone
            });

            core.setOutput('result', result);
            console.log('Issue details:', result);

      - name: Debug issue details output
        if: steps.extract-issue.outputs.ISSUE_NUMBER != ''
        run: |
          echo "Issue details result: ${{ steps.get-issue-details.outputs.result }}"

      - name: Apply labels to pull request
        if: steps.extract-issue.outputs.ISSUE_NUMBER != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_SECRET }}
          script: |
            const prNumber = context.issue.number;
            const details = JSON.parse('${{ steps.get-issue-details.outputs.result }}');
            if (details.labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: details.labels
              });
            }

      - name: Add assignees to pull request
        if: steps.extract-issue.outputs.ISSUE_NUMBER != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_SECRET }}
          script: |
            const prNumber = context.issue.number;
            const details = JSON.parse('${{ steps.get-issue-details.outputs.result }}');
            if (details.assignees.length > 0) {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                assignees: details.assignees
              });
            }

      - name: Add milestone to pull request
        if: steps.extract-issue.outputs.ISSUE_NUMBER != '' && steps.get-issue-details.outputs.result.milestone != null
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_SECRET }}
          script: |
            const prNumber = context.issue.number;
            const details = JSON.parse('${{ steps.get-issue-details.outputs.result }}');
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              milestone: details.milestone
            });

      - name: Add projects to pull request
        if: steps.extract-issue.outputs.ISSUE_NUMBER != '' && steps.get-issue-details.outputs.result.projects.length > 0
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_SECRET }}
          script: |
            const prNumber = context.issue.number;
            const details = JSON.parse('${{ steps.get-issue-details.outputs.result }}');
            for (const projectId of details.projects) {
              await github.rest.projects.createCard({
                column_id: projectId,
                content_id: prNumber,
                content_type: 'PullRequest'
              });
            }
